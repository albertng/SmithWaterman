##-----------------------------------------------------------------------------
##
## (c) Copyright 2009 Xilinx, Inc. All rights reserved.
##
## This file contains confidential and proprietary information of Xilinx, Inc.
## and is protected under U.S. and international copyright and other
## intellectual property laws.
##
## DISCLAIMER
##
## This disclaimer is not a license and does not grant any rights to the
## materials distributed herewith. Except as otherwise provided in a valid
## license issued to you by Xilinx, and to the maximum extent permitted by
## applicable law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND WITH ALL
## FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES AND CONDITIONS, EXPRESS,
## IMPLIED, OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF
## MERCHANTABILITY, NON-INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE;
## and (2) Xilinx shall not be liable (whether in contract or tort, including
## negligence, or under any other theory of liability) for any loss or damage
## of any kind or nature related to, arising under or in connection with these
## materials, including for any direct, or any indirect, special, incidental,
## or consequential loss or damage (including loss of data, profits, goodwill,
## or any type of loss or damage suffered as a result of any action brought by
## a third party) even if such damage or loss was reasonably foreseeable or
## Xilinx had been advised of the possibility of the same.
##
## CRITICAL APPLICATIONS
##
## Xilinx products are not designed or intended to be fail-safe, or for use in
## any application requiring fail-safe performance, such as life-support or
## safety devices or systems, Class III medical devices, nuclear facilities,
## applications related to the deployment of airbags, or any other
## applications that could lead to death, personal injury, or severe property
## or environmental damage (individually and collectively, "Critical
## Applications"). Customer assumes the sole risk and liability of any use of
## Xilinx products in Critical Applications, subject only to applicable laws
## and regulations governing limitations on product liability.
##
## THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS PART OF THIS FILE
## AT ALL TIMES.
##
##-----------------------------------------------------------------------------
## Project    : Virtex-6 Integrated Block for PCI Express
## File       : xilinx_pcie_2_0_ep_v6_08_lane_gen1_xc6vlx240t-ff1156-1-PCIE_X0Y1.ucf
#
###############################################################################
# Define Device, Package And Speed Grade
###############################################################################

CONFIG PART = xc6vlx240t-ff1156-2;

###############################################################################
# User Time Names / User Time Groups / Time Specs
###############################################################################

###############################################################################
# User Physical Constraints
###############################################################################


###############################################################################
# Pinout and Related I/O Constraints
###############################################################################


NET "extra_clk_p" NODELAY = "TRUE";
NET "extra_clk_p" TNM_NET = "extra_clk";
NET "extra_clk_p" IOSTANDARD = LVDS_25;
NET "extra_clk_p" DIFF_TERM = "TRUE";
NET "PicoFramework/extra_clk_p" LOC = K13;
NET "extra_clk_n" NODELAY = "TRUE";
NET "extra_clk_n" TNM_NET = "extra_clk";
NET "extra_clk_n" IOSTANDARD = LVDS_25;
NET "extra_clk_n" DIFF_TERM = "TRUE";
NET "PicoFramework/extra_clk_n" LOC = K12;
TIMESPEC TS_extra_clk = PERIOD "extra_clk" 5 ns;

#
# SYS reset (input) signal.  The sys_reset_n signal should be
# obtained from the PCI Express interface if possible.  For
# slot based form factors, a system reset signal is usually
# present on the connector.  For cable based form factors, a
# system reset signal may not be available.  In this case, the
# system reset signal must be generated locally by some form of
# supervisory circuit.  You may change the IOSTANDARD and LOC
# to suit your requirements and VCCO voltage banking rules.
#

NET "sys_reset_n" TIG;
NET "sys_reset_n" NODELAY = "TRUE";
NET "sys_reset_n" IOSTANDARD = LVCMOS25;
NET "sys_reset_n" PULLUP;
NET "PicoFramework/sys_reset_n" LOC = AG23;

#
#
# SYS clock 250 MHz (input) signal. The sys_clk_p and sys_clk_n
# signals are the PCI Express reference clock. Virtex-6 GT
# Transceiver architecture requires the use of a dedicated clock
# resources (FPGA input pins) associated with each GT Transceiver.
# To use these pins an IBUFDS primitive (refclk_ibuf) is
# instantiated in user's design.
# Please refer to the Virtex-6 GT Transceiver User Guide 
# (UG) for guidelines regarding clock resource selection.
#

#INST "refclk_ibuf" LOC = IBUFDS_GTXE1_X0Y7;

#NET "sys_clk_n" LOC = V6;
#NET "sys_clk_p" LOC = V5;
INST "PicoFramework/refclk_ibuf" LOC = IBUFDS_GTXE1_X0Y4;

#
# Transceiver instance placement.  This constraint selects the
# transceivers to be used, which also dictates the pinout for the
# transmit and receive differential pairs.  Please refer to the
# Virtex-6 GT Transceiver User Guide (UG) for more information.
#

#NET "pci_exp_rxn[0]" LOC = J4;
#NET "pci_exp_rxn[1]" LOC = K6;
#NET "pci_exp_rxn[2]" LOC = L4;
#NET "pci_exp_rxn[3]" LOC = N4;
#NET "pci_exp_rxn[4]" LOC = R4;
#NET "pci_exp_rxn[5]" LOC = U4;
#NET "pci_exp_rxn[6]" LOC = W4;
#NET "pci_exp_rxn[7]" LOC = AA4;
#
#NET "pci_exp_rxp[0]" LOC = J3;
#NET "pci_exp_rxp[1]" LOC = K5;
#NET "pci_exp_rxp[2]" LOC = L3;
#NET "pci_exp_rxp[3]" LOC = N3;
#NET "pci_exp_rxp[4]" LOC = R3;
#NET "pci_exp_rxp[5]" LOC = U3;
#NET "pci_exp_rxp[6]" LOC = W3;
#NET "pci_exp_rxp[7]" LOC = AA3;
#
#NET "pci_exp_txn[0]" LOC = F2;
#NET "pci_exp_txn[1]" LOC = H2;
#NET "pci_exp_txn[2]" LOC = K2;
#NET "pci_exp_txn[3]" LOC = M2;
#NET "pci_exp_txn[4]" LOC = P2;
#NET "pci_exp_txn[5]" LOC = T2;
#NET "pci_exp_txn[6]" LOC = V2;
#NET "pci_exp_txn[7]" LOC = Y2;
#
#NET "pci_exp_txp[0]" LOC = F1;
#NET "pci_exp_txp[1]" LOC = H1;
#NET "pci_exp_txp[2]" LOC = K1;
#NET "pci_exp_txp[3]" LOC = M1;
#NET "pci_exp_txp[4]" LOC = P1;
#NET "pci_exp_txp[5]" LOC = T1;
#NET "pci_exp_txp[6]" LOC = V1;
#NET "pci_exp_txp[7]" LOC = Y1;


# PCIe Lane 0
INST "PicoFramework/core/pcie_2_0_i/pcie_gt_i/gtx_v6_i/GTXD[0].GTX" LOC = GTXE1_X0Y15;

# PCIe Lane 1
INST "PicoFramework/core/pcie_2_0_i/pcie_gt_i/gtx_v6_i/GTXD[1].GTX" LOC = GTXE1_X0Y14;

# PCIe Lane 2
INST "PicoFramework/core/pcie_2_0_i/pcie_gt_i/gtx_v6_i/GTXD[2].GTX" LOC = GTXE1_X0Y13;

# PCIe Lane 3
INST "PicoFramework/core/pcie_2_0_i/pcie_gt_i/gtx_v6_i/GTXD[3].GTX" LOC = GTXE1_X0Y12;

# PCIe Lane 4
INST "PicoFramework/core/pcie_2_0_i/pcie_gt_i/gtx_v6_i/GTXD[4].GTX" LOC = GTXE1_X0Y11;

# PCIe Lane 5
INST "PicoFramework/core/pcie_2_0_i/pcie_gt_i/gtx_v6_i/GTXD[5].GTX" LOC = GTXE1_X0Y10;

# PCIe Lane 6
INST "PicoFramework/core/pcie_2_0_i/pcie_gt_i/gtx_v6_i/GTXD[6].GTX" LOC = GTXE1_X0Y9;

# PCIe Lane 7
INST "PicoFramework/core/pcie_2_0_i/pcie_gt_i/gtx_v6_i/GTXD[7].GTX" LOC = GTXE1_X0Y8;


#
# PCI Express Block placement. This constraint selects the PCI Express
# Block to be used.
#

INST "PicoFramework/core/pcie_2_0_i/pcie_block_i" LOC = PCIE_X0Y1;




# Flash
NET "flash_busy" IOSTANDARD = LVCMOS25;
NET "flash_busy" PULLUP;
NET "flash_busy" LOC = AJ9;
NET "flash_byte" IOSTANDARD = LVCMOS25;
NET "flash_byte" LOC = AN10;
NET "flash_ce" IOSTANDARD = LVCMOS25;
NET "flash_ce" LOC = Y24;
NET "flash_oe" IOSTANDARD = LVCMOS25;
NET "flash_oe" LOC = AA24;
NET "flash_reset" IOSTANDARD = LVCMOS25;
NET "flash_reset" LOC = AP10;
NET "flash_we" IOSTANDARD = LVCMOS25;
NET "flash_we" LOC = AF23;
# Pin Group: FLASH_A
NET "flash_a[0]" IOSTANDARD = LVCMOS25;
NET "flash_a[0]" LOC = AL8;
NET "flash_a[1]" IOSTANDARD = LVCMOS25;
NET "flash_a[1]" LOC = AK8;
NET "flash_a[2]" IOSTANDARD = LVCMOS25;
NET "flash_a[2]" LOC = AC9;
NET "flash_a[3]" IOSTANDARD = LVCMOS25;
NET "flash_a[3]" LOC = AD10;
NET "flash_a[4]" IOSTANDARD = LVCMOS25;
NET "flash_a[4]" LOC = C8;
NET "flash_a[5]" IOSTANDARD = LVCMOS25;
NET "flash_a[5]" LOC = B8;
NET "flash_a[6]" IOSTANDARD = LVCMOS25;
NET "flash_a[6]" LOC = E9;
NET "flash_a[7]" IOSTANDARD = LVCMOS25;
NET "flash_a[7]" LOC = E8;
NET "flash_a[8]" IOSTANDARD = LVCMOS25;
NET "flash_a[8]" LOC = A8;
NET "flash_a[9]" IOSTANDARD = LVCMOS25;
NET "flash_a[9]" LOC = A9;
NET "flash_a[10]" IOSTANDARD = LVCMOS25;
NET "flash_a[10]" LOC = D9;
NET "flash_a[11]" IOSTANDARD = LVCMOS25;
NET "flash_a[11]" LOC = C9;
NET "flash_a[12]" IOSTANDARD = LVCMOS25;
NET "flash_a[12]" LOC = D10;
NET "flash_a[13]" IOSTANDARD = LVCMOS25;
NET "flash_a[13]" LOC = C10;
NET "flash_a[14]" IOSTANDARD = LVCMOS25;
NET "flash_a[14]" LOC = F10;
NET "flash_a[15]" IOSTANDARD = LVCMOS25;
NET "flash_a[15]" LOC = F9;
NET "flash_a[16]" IOSTANDARD = LVCMOS25;
NET "flash_a[16]" LOC = AH8;
NET "flash_a[17]" IOSTANDARD = LVCMOS25;
NET "flash_a[17]" LOC = AG8;
NET "flash_a[18]" IOSTANDARD = LVCMOS25;
NET "flash_a[18]" LOC = AP9;
NET "flash_a[19]" IOSTANDARD = LVCMOS25;
NET "flash_a[19]" LOC = AN9;
NET "flash_a[20]" IOSTANDARD = LVCMOS25;
NET "flash_a[20]" LOC = AF10;
NET "flash_a[21]" IOSTANDARD = LVCMOS25;
NET "flash_a[21]" LOC = AF9;
NET "flash_a[22]" IOSTANDARD = LVCMOS25;
NET "flash_a[22]" LOC = AL9;
NET "flash_a[23]" IOSTANDARD = LVCMOS25;
NET "flash_a[23]" LOC = AK9;
NET "flash_a[24]" IOSTANDARD = LVCMOS25;
NET "flash_a[24]" LOC = AE9;
NET "flash_a[25]" IOSTANDARD = LVCMOS25;
NET "flash_a[25]" LOC = AD9;
# Pin Group: FLASH_D
NET "flash_d[0]" IOSTANDARD = LVCMOS25;
NET "PicoFramework/flash_d[0]" LOC = AF24;
NET "flash_d[1]" IOSTANDARD = LVCMOS25;
NET "PicoFramework/flash_d[1]" LOC = AF25;
NET "flash_d[2]" IOSTANDARD = LVCMOS25;
NET "PicoFramework/flash_d[2]" LOC = W24;
NET "flash_d[3]" IOSTANDARD = LVCMOS25;
NET "PicoFramework/flash_d[3]" LOC = V24;
NET "flash_d[4]" IOSTANDARD = LVCMOS25;
NET "PicoFramework/flash_d[4]" LOC = H24;
NET "flash_d[5]" IOSTANDARD = LVCMOS25;
NET "PicoFramework/flash_d[5]" LOC = H25;
NET "flash_d[6]" IOSTANDARD = LVCMOS25;
NET "PicoFramework/flash_d[6]" LOC = P24;
NET "flash_d[7]" IOSTANDARD = LVCMOS25;
NET "PicoFramework/flash_d[7]" LOC = R24;
NET "flash_d[8]" IOSTANDARD = LVCMOS25;
NET "PicoFramework/flash_d[8]" LOC = G23;
NET "flash_d[9]" IOSTANDARD = LVCMOS25;
NET "PicoFramework/flash_d[9]" LOC = H23;
NET "flash_d[10]" IOSTANDARD = LVCMOS25;
NET "PicoFramework/flash_d[10]" LOC = N24;
NET "flash_d[11]" IOSTANDARD = LVCMOS25;
NET "PicoFramework/flash_d[11]" LOC = N23;
NET "flash_d[12]" IOSTANDARD = LVCMOS25;
NET "PicoFramework/flash_d[12]" LOC = F23;
NET "flash_d[13]" IOSTANDARD = LVCMOS25;
NET "PicoFramework/flash_d[13]" LOC = F24;
NET "flash_d[14]" IOSTANDARD = LVCMOS25;
NET "PicoFramework/flash_d[14]" LOC = L24;
NET "flash_d[15]" IOSTANDARD = LVCMOS25;
NET "PicoFramework/flash_d[15]" LOC = M23;


###############################################################################
# Timing Constraints
###############################################################################

#
# Timing requirements and related constraints.
#

NET "*s_rst*" TIG;
NET "*PicoRst*" TIG;
NET "*LNKUP*" TIG;

NET "PicoFramework/sys_clk_c" TNM_NET = "SYSCLK";
NET "PicoFramework/core/pcie_clocking_i/clk_125" TNM_NET = "CLK_125";
NET "PicoFramework/core/pcie_clocking_i/clk_250" TNM_NET = "CLK_250";
NET "PicoFramework/core*/pcie_clocking_i/clk_500" TNM_NET = "CLK_500";

TIMESPEC TS_SYSCLK = PERIOD "SYSCLK" 250 MHz HIGH 50 %;
TIMESPEC TS_CLK_125 = PERIOD "CLK_125" TS_SYSCLK / 2 HIGH 50 % PRIORITY 100;
TIMESPEC TS_CLK_250 = PERIOD "CLK_250" TS_SYSCLK * 1 HIGH 50 % PRIORITY 10;
TIMESPEC TS_CLK_500 = PERIOD "CLK_500" TS_SYSCLK * 2 HIGH 50 % PRIORITY 1;


NET "PicoFramework/core*/pcie_clocking_i/sel_lnk_rate_d" TIG;
PIN "PicoFramework/core/trn_reset_n_int_i.CLR" TIG;
PIN "PicoFramework/core/trn_reset_n_i.CLR" TIG;
PIN "PicoFramework/core/pcie_clocking_i/mmcm_adv_i.RST" TIG;

#TIMESPEC "TS_RESETN" = FROM FFS(*) TO FFS(user_reset_n_i) 4 ns;

#TIMESPEC "TS_RESETN" = FROM FFS(*) TO FFS("PicoFramework/trn_reset_n_i") 8 ns;


INST "PicoFramework/core/pcie_2_0_i/pcie_bram_i/pcie_brams_rx/brams[1].ram/use_ramb36.ramb36" LOC = RAMB36_X7Y28;
INST "PicoFramework/core/pcie_2_0_i/pcie_bram_i/pcie_brams_rx/brams[0].ram/use_ramb36.ramb36" LOC = RAMB36_X7Y26;
INST "PicoFramework/core/pcie_2_0_i/pcie_bram_i/pcie_brams_tx/brams[0].ram/use_ramb36.ramb36" LOC = RAMB36_X7Y27;
INST "PicoFramework/core/pcie_2_0_i/pcie_bram_i/pcie_brams_tx/brams[1].ram/use_ramb36.ramb36" LOC = RAMB36_X7Y25;

###############################################################################
# Physical Constraints
###############################################################################

#AREA_GROUP "pblock_app_BMD" RANGE=DSP48_X6Y48:DSP48_X7Y63;
#AREA_GROUP "pblock_app_BMD" RANGE=SLICE_X116Y100:SLICE_X161Y159;
INST "PicoFramework" AREA_GROUP = "pblock_app_BMD";
AREA_GROUP "pblock_app_BMD" RANGE=SLICE_X116Y81:SLICE_X161Y159;
AREA_GROUP "pblock_app_BMD" RANGE=DSP48_X6Y34:DSP48_X7Y63;
AREA_GROUP "pblock_app_BMD" RANGE=RAMB18_X5Y34:RAMB18_X8Y63;
AREA_GROUP "pblock_app_BMD" RANGE=RAMB36_X5Y17:RAMB36_X8Y31;

###############################################################################
# End
###############################################################################
